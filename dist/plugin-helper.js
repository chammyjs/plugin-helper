/*! @chammy/plugin-helper v0.1.0 | (c) 2017 Chammy.js | MIT license (see LICENSE) */'use strict';Object.defineProperty(exports,'__esModule',{value:!0});var asyncGenerator=function(){function a(a){this.value=a}function b(b){function c(e,f){try{var g=b[e](f),h=g.value;h instanceof a?Promise.resolve(h.value).then(function(a){c('next',a)},function(a){c('throw',a)}):d(g.done?'return':'normal',g.value)}catch(a){d('throw',a)}}function d(a,b){'return'===a?e.resolve({value:b,done:!0}):'throw'===a?e.reject(b):e.resolve({value:b,done:!1});e=e.next,e?c(e.key,e.arg):f=null}var e,f;this._invoke=function(a,b){return new Promise(function(d,g){var h={key:a,arg:b,resolve:d,reject:g,next:null};f?f=f.next=h:(e=f=h,c(a,b))})},'function'!=typeof b.return&&(this.return=void 0)}return'function'==typeof Symbol&&Symbol.asyncIterator&&(b.prototype[Symbol.asyncIterator]=function(){return this}),b.prototype.next=function(a){return this._invoke('next',a)},b.prototype.throw=function(a){return this._invoke('throw',a)},b.prototype.return=function(a){return this._invoke('return',a)},{wrap:function(a){return function(){return new b(a.apply(this,arguments))}},await:function(b){return new a(b)}}}(),classCallCheck=function(a,b){if(!(a instanceof b))throw new TypeError('Cannot call a class as a function')},createClass=function(){function a(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,'value'in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}(),Question=function a(b,c,d){var e=3<arguments.length&&arguments[3]!==void 0?arguments[3]:'';classCallCheck(this,a),this.name=b,this.question=c,this.answerType=d,this.defaultAnswer=e},Plugin=function(){function a(){if(classCallCheck(this,a),new.target===a)throw new Error('Plugin class cannot be used directly, it must be inherited')}return createClass(a,[{key:'configure',value:function(){throw new Error('Classes inheriting from Plugin must implement configure method')}},{key:'execute',value:function(){throw new Error('Classes inheriting from Plugin must implement execute method')}}],[{key:'pluginName',get:function(){throw new Error('Classes inheriting from Plugin must contain pluginName property')}}]),a}();exports.Question=Question,exports.Plugin=Plugin;
//# sourceMappingURL=plugin-helper.js.map
